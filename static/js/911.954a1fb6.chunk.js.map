{"version":3,"file":"static/js/911.954a1fb6.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","js/API_requests/getSingleMovie.js","pages/MoviesDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_item\":\"MovieDetails_movie_item__a4W62\",\"movie_descr\":\"MovieDetails_movie_descr__oHUzE\",\"movie_title\":\"MovieDetails_movie_title__dhyNq\",\"movie_score\":\"MovieDetails_movie_score__rYR6Q\",\"movie_details\":\"MovieDetails_movie_details__AvFFx\",\"movie_genres\":\"MovieDetails_movie_genres__PntoL\",\"movie_genre\":\"MovieDetails_movie_genre__kBn4q\",\"movie_back_link\":\"MovieDetails_movie_back_link__oiHoH\"};","import clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport PropTypes from 'prop-types';\n\nimport styled from './MovieDetails.module.css';\n\nconst MovieDetails = ({ data, backLinkHref }) => {\n  const { title, poster_path, vote_average, overview, genres } = data;\n  const votes = String(Math.round(vote_average * 10));\n  return (\n    <>\n      <Link className={clsx(styled.movie_back_link)} to={backLinkHref}>\n        <TiArrowBackOutline fontSize={'36px'} />\n        Go back\n      </Link>\n      {Boolean(data) && (\n        <div className={clsx(styled.movie_item)}>\n          <img\n            src={\n              poster_path && `https://image.tmdb.org/t/p/w500/${poster_path}`\n            }\n            alt={title && title}\n            className=\"movie_poster\"\n          />\n          <div className={clsx(styled.movie_descr)}>\n            <h2 className={clsx(styled.movie_title)}>{title}</h2>\n            <p className={clsx(styled.movie_score)}>\n              Positive votes: <span>{votes}%</span>\n            </p>\n            <div className={clsx(styled.movie_details)}>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n            </div>\n            <div className={clsx(styled.movie_details)}>\n              <h3>Genres</h3>\n              <p className={clsx(styled.movie_genres)}>\n                {genres?.map(({ name }, index) => (\n                  <a key={index} href=\"_\" className={clsx(styled.movie_genre)}>\n                    {name}\n                  </a>\n                ))}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default MovieDetails;\nMovieDetails.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n  }),\n  backLinkHref: PropTypes.object.isRequired,\n};\n","import axios from 'axios';\nimport { api_key } from 'js/consts';\n\nexport const getSingleMovie = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const config = {\n    params: {\n      api_key,\n    },\n  };\n  const { data } = await axios(URL, config);\n\n  return data;\n};\n","import { Suspense, lazy, useEffect } from 'react';\nimport { Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\n\nimport Loader from 'components/Loader/Loader';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport ErrorPage from './ErrorPage';\n\nimport { getSingleMovie } from 'js/API_requests/getSingleMovie';\nimport { useData } from 'js/useData/useData';\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst LocationProvider = ({ children }) => {\n  return <AnimatePresence>{children}</AnimatePresence>;\n};\n\nconst RoutesWithAnimation = () => {\n  const location = useLocation();\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <Routes key={location.key}>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </Suspense>\n  );\n};\n\nconst MoviesDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const { data: moviesList, isFetching, error, getData } = useData();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (!movieId) return;\n    getData(getSingleMovie(movieId));\n  }, [getData, movieId]);\n\n  if (error?.message) {\n    return <ErrorPage />;\n  }\n\n  return (\n    <section>\n      <div className=\"container\">\n        {isFetching && <Loader />}\n        {moviesList && (\n          <MovieDetails data={moviesList} backLinkHref={backLinkHref} />\n        )}\n        <LocationProvider>\n          <RoutesWithAnimation />\n        </LocationProvider>\n      </div>\n    </section>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["_ref","data","backLinkHref","title","poster_path","vote_average","overview","genres","votes","String","Math","round","_jsxs","_Fragment","children","Link","className","clsx","styled","to","_jsx","TiArrowBackOutline","fontSize","Boolean","src","concat","alt","map","_ref2","index","name","href","state","from","getSingleMovie","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","URL","config","_yield$axios","_context","prev","next","params","api_key","axios","sent","abrupt","stop","_x","apply","arguments","Cast","lazy","Reviews","LocationProvider","AnimatePresence","RoutesWithAnimation","location","useLocation","Suspense","fallback","Loader","Routes","Route","path","element","key","_location$state$from","_location$state","useParams","_useData","useData","moviesList","isFetching","error","getData","useEffect","message","ErrorPage","MovieDetails"],"sourceRoot":""}